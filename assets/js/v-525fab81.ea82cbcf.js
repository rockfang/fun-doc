(self.webpackChunkfun_doc=self.webpackChunkfun_doc||[]).push([[4664],{9788:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-525fab81",path:"/micro_frontend/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E5%AD%90%E5%BA%94%E7%94%A8.html",title:"重构菜单项为子项目",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"示例：创建dashboard子项目",slug:"示例-创建dashboard子项目",children:[{level:3,title:"1. 创建子项目",slug:"_1-创建子项目",children:[]},{level:3,title:"2. 子项目配置",slug:"_2-子项目配置",children:[]},{level:3,title:"3. 主项目配置",slug:"_3-主项目配置",children:[]},{level:3,title:"4. 查看效果",slug:"_4-查看效果",children:[]}]}],filePathRelative:"micro_frontend/如何创建子应用.md",git:{updatedTime:163894919e4,contributors:[{name:"caifang",email:"cooldish1245@163.com",commits:2}]}}},6233:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>h});var p=a(6252);const t=(0,p.Wm)("h1",{id:"重构菜单项为子项目"},[(0,p.Wm)("a",{class:"header-anchor",href:"#重构菜单项为子项目"},"#"),(0,p.Uk)(" 重构菜单项为子项目")],-1),e=(0,p.Uk)("项目基于 "),o={href:"https://qiankun.umijs.org/zh/guide/getting-started",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("qiankun"),l=(0,p.uE)('<p>拆解后的目录结构如下，<code>main</code>是主项目，其他是子项目。目前<code>一个一级菜单对应一个子项目</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>| -- main\n| -- sub-dashboard\n| -- sub-datacollect\n| -- etc..\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="示例-创建dashboard子项目"><a class="header-anchor" href="#示例-创建dashboard子项目">#</a> 示例：创建dashboard子项目</h2><p>以拆解dashboard项目为例，看下拆解和组装流程。</p><h3 id="_1-创建子项目"><a class="header-anchor" href="#_1-创建子项目">#</a> 1. 创建子项目</h3>',5),u=(0,p.Uk)("目前主项目和子项目我们都用 "),r={href:"https://cn.vuejs.org/v2/guide/#",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Uk)("vue"),k=(0,p.Uk)(" 技术栈 。以下是使用 "),b={href:"https://cli.vuejs.org/zh/guide/creating-a-project.html",target:"_blank",rel:"noopener noreferrer"},m=(0,p.Uk)("vue-cli3"),d=(0,p.Uk)("创建项目流程。"),g=(0,p.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vue create sub-dashboard\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>我们创建包含<code>babel</code> <code>router</code> <code>vuex</code> <code>eslint</code>的项目。</p><h3 id="_2-子项目配置"><a class="header-anchor" href="#_2-子项目配置">#</a> 2. 子项目配置</h3><ul><li><p>改造子项目路由 <code>router/index.js</code></p><p>把懒加载的路由变成直接加载，导出routes。代码如下：</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//  router/index.js</span>\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Analysis <span class="token keyword">from</span> <span class="token string">&quot;../views/Dashboard/Analysis.vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> IframeAnalysis <span class="token keyword">from</span> <span class="token string">&quot;../views/Dashboard/IframeAnalysis.vue&quot;</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/analysis1&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&quot;/analysis1&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;Analysis&quot;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Analysis\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&quot;/analysis2&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;IframeAnalysis&quot;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> IframeAnalysis\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> routes<span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><blockquote><p>在我们的中台项目中，由于菜单栏都放在<code>main</code>中管理，子项目本身并没有导航按钮。因此子项目其实只需平铺配置好每个路由即可。</p></blockquote><ul><li>配置<code>main.js</code></li></ul><p>暴露子项目的生命周期钩子，配置子项目渲染路由</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;./App.vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> routes <span class="token keyword">from</span> <span class="token string">&quot;./router&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span>\n<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&quot;./store&quot;</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n<span class="token comment">// eslint-disable-next-line no-undef</span>\n__webpack_public_path__ <span class="token operator">=</span> window<span class="token punctuation">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__<span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> router <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> instance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> container <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    base<span class="token operator">:</span> window<span class="token punctuation">.</span>__POWERED_BY_QIANKUN__ <span class="token operator">?</span> <span class="token string">&#39;/sub-dashboard&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span><span class="token comment">//设置base</span>\n    mode<span class="token operator">:</span> <span class="token string">&#39;history&#39;</span><span class="token punctuation">,</span>\n    routes<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    router<span class="token punctuation">,</span>\n    store<span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span>container <span class="token operator">?</span> container<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>window<span class="token punctuation">.</span>__POWERED_BY_QIANKUN__<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;[sub-dashboard] vue app bootstraped&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">mount</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;[sub-dashboard] props from main framework&#39;</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// storeTest(props);</span>\n  <span class="token comment">//mount方法中触发应用的渲染方法</span>\n  <span class="token function">render</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">unmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">//卸载应用</span>\n  instance<span class="token punctuation">.</span><span class="token function">$destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  instance<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  instance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n  router <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 单独开发环境</span>\nwindow<span class="token punctuation">.</span>__POWERED_BY_QIANKUN__ <span class="token operator">||</span> <span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><blockquote><p><strong>关注点</strong></p><p>设定子项目在主项目的路由名称：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>base<span class="token operator">:</span> window<span class="token punctuation">.</span>__POWERED_BY_QIANKUN__ <span class="token operator">?</span> <span class="token string">&#39;/sub-dashboard&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span><span class="token comment">//设置base</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>使用 webpack 运行时 publicPath 配置：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>__webpack_public_path__ <span class="token operator">=</span> window<span class="token punctuation">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></blockquote><ul><li><p>配置<code>vue.config.js</code></p><p>创建该文件，配置如下：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./package&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">7003</span><span class="token punctuation">;</span> <span class="token comment">// dev port</span>\n<span class="token keyword">const</span> dev <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// publicPath: dev ? `//localhost:${port}` : &#39;/&#39;,</span>\n  outputDir<span class="token operator">:</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">,</span>\n  assetsDir<span class="token operator">:</span> <span class="token string">&#39;static&#39;</span><span class="token punctuation">,</span>\n  filenameHashing<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  \n  <span class="token comment">//handle ant design lib use less</span>\n  css<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loaderOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n      less<span class="token operator">:</span> <span class="token punctuation">{</span>\n        javascriptEnabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// host: &#39;0.0.0.0&#39;,</span>\n    hot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    disableHostCheck<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    port<span class="token punctuation">,</span>\n    overlay<span class="token operator">:</span> <span class="token punctuation">{</span>\n      warnings<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      errors<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token operator">:</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    proxy<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&quot;/metaApi&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        target<span class="token operator">:</span> <span class="token string">&#39;http://172.16.1.119:8086/&#39;</span><span class="token punctuation">,</span>\n        pathRewrite<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token string">&quot;^/metaApi&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 自定义webpack配置</span>\n  configureWebpack<span class="token operator">:</span> <span class="token punctuation">{</span>\n  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>\n      alias<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">&#39;@&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    output<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 把子应用打包成 umd 库格式</span>\n      library<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-[name]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      libraryTarget<span class="token operator">:</span> <span class="token string">&#39;umd&#39;</span><span class="token punctuation">,</span><span class="token comment">//umd格式既支持浏览器又支持node环境执行https://zhuanlan.zhihu.com/p/89545793</span>\n      jsonpFunction<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">webpackJsonp_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><blockquote><p>修改其中端口号；</p></blockquote></li></ul><h3 id="_3-主项目配置"><a class="header-anchor" href="#_3-主项目配置">#</a> 3. 主项目配置</h3><p>主项目名为<code>main</code></p><ul><li><code>main.js</code>中注册子项目</li></ul><p><code>registerMicroApps</code>方法中增加子路由信息</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;sub-dashboard&#39;</span><span class="token punctuation">,</span>\n    entry<span class="token operator">:</span> dev <span class="token operator">?</span> <span class="token string">&#39;//localhost:7003&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;http://172.16.2.123:30203&#39;</span><span class="token punctuation">,</span>\n    container<span class="token operator">:</span> <span class="token string">&#39;#subapp-container&#39;</span><span class="token punctuation">,</span>\n    activeRule<span class="token operator">:</span> <span class="token function">genActiveRule</span><span class="token punctuation">(</span><span class="token string">&#39;/sub-dashboard&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>其中<code>genActiveRule</code>方法参数即为匹配子应用路由规则，建议name和它一致。</p><p><code>entry</code>入口根据是否开发环境，配置调试和线上地址</p></blockquote><ul><li><p><code>src/config/microconfig.js</code>中添加配置子项目名</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n<span class="token keyword">const</span> dashBoardApp <span class="token operator">=</span> <span class="token string">&quot;/sub-dashboard&quot;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n    dashBoardApp<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p><code>router/index.js</code>中配置路由</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// dashboard</span>\n<span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>\n  redirect<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dashBoardApp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">{</span>\n  path<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dashBoardApp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">&quot;sub-dashboard&quot;</span><span class="token punctuation">,</span>\n  meta<span class="token operator">:</span> <span class="token punctuation">{</span> icon<span class="token operator">:</span> <span class="token string">&quot;dashboard&quot;</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">&quot;仪表盘&quot;</span><span class="token punctuation">,</span> menuId<span class="token operator">:</span> <span class="token string">&quot;1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  children<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dashBoardApp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/analysis1</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;analysis1&quot;</span><span class="token punctuation">,</span>\n      meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;分析页1&quot;</span><span class="token punctuation">,</span> menuId<span class="token operator">:</span> <span class="token string">&quot;1-1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dashBoardApp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/analysis2</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;analysis2&quot;</span><span class="token punctuation">,</span>\n      meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;分析页2&quot;</span><span class="token punctuation">,</span> menuId<span class="token operator">:</span> <span class="token string">&quot;1-2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><blockquote><p>配置path要和子项目的路由匹配；dashBoardApp为前面定义的子项目变量名</p></blockquote></li></ul><h3 id="_4-查看效果"><a class="header-anchor" href="#_4-查看效果">#</a> 4. 查看效果</h3><p><img src="https://fun-typora-pics.oss-cn-beijing.aliyuncs.com/imgimage-20201111160354708.png" alt="image-20201111160354708"></p><p>主项目能加载子项目后，接下来我们就可以在子项目中写我们的模块代码了。</p><p>把原项目中的<code>dashboard</code>菜单涉及逻辑代码拆解到该子项目中即可。</p>',22),h={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("p",null,[e,(0,p.Wm)("a",o,[c,(0,p.Wm)(a)])]),l,(0,p.Wm)("p",null,[u,(0,p.Wm)("a",r,[i,(0,p.Wm)(a)]),k,(0,p.Wm)("a",b,[m,(0,p.Wm)(a)]),d]),g],64)}}}}]);