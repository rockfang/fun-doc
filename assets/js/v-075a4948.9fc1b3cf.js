(self.webpackChunkfun_doc=self.webpackChunkfun_doc||[]).push([[1070],{9021:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-075a4948",path:"/typescript/TS%E4%B8%AD%E6%A8%A1%E5%9D%97%E5%8C%96.html",title:"TS中模块化",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"namespace命名空间",slug:"namespace命名空间",children:[{level:3,title:"准备工作",slug:"准备工作",children:[]},{level:3,title:"定义namespace模块",slug:"定义namespace模块",children:[]}]},{level:2,title:"使用ES6模块",slug:"使用es6模块",children:[]}],filePathRelative:"typescript/TS中模块化.md",git:{updatedTime:1624500867e3,contributors:[{name:"caifang",email:"cooldish1245@163.com",commits:1}]}}},2815:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="ts中模块化"><a class="header-anchor" href="#ts中模块化">#</a> TS中模块化</h1><h2 id="namespace命名空间"><a class="header-anchor" href="#namespace命名空间">#</a> namespace命名空间</h2><h3 id="准备工作"><a class="header-anchor" href="#准备工作">#</a> 准备工作</h3><p><code>tsconfig.jsono</code>修改amd方式引入</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;amd&quot;</span>\n      ...\n  <span class="token punctuation">}</span>\n   <span class="token property">&quot;outFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/bundle.js&quot;</span><span class="token punctuation">,</span>\n    ...\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>index.html</code>引入bundle文件</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dist/bundle.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">defer</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="定义namespace模块"><a class="header-anchor" href="#定义namespace模块">#</a> 定义<code>namespace</code>模块</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//drag-drop-interface.ts</span>\n<span class="token keyword">namespace</span> App <span class="token punctuation">{</span>\n  <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Draggable</span> <span class="token punctuation">{</span>\n    <span class="token function">dragStartHandler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> DragEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">dragEndHandler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> DragEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DragTarget</span> <span class="token punctuation">{</span>\n    <span class="token function">dragOverHandler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> DragEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">dropHandler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> DragEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">dragLeaveHandler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> DragEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">//不使用export 接口仅在命名空间内使用； 通过export后，接口可以在外面使用</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>使用：<code>&lt;reference path=&quot;xxx.ts&quot;/&gt;</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/// &lt;reference path=&quot;drag-drop-interface.ts&quot;/&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>根据功能创建不能目录，实现模块化代码：</p><p><img src="https://fun-typora-pics.oss-cn-beijing.aliyuncs.com/img/20201221100646.png" alt="image-20201218113658322"></p><h2 id="使用es6模块"><a class="header-anchor" href="#使用es6模块">#</a> 使用ES6模块</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ProjectInput <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./components/project-input.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ProjectList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./components/project-list.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">ProjectInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">ProjectList</span><span class="token punctuation">(</span><span class="token string">&quot;active&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">ProjectList</span><span class="token punctuation">(</span><span class="token string">&quot;finished&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>tsconfig.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es2016&quot;</span>\n      ...\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>index.html</code></p><p>指定<code>type=&#39;module&#39;</code>方式引入</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dist/app.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>现在的原生浏览器能识别<code>es6</code>模块代码了。但要注意引入的模块是<code>js</code>文件，这样浏览器才能正常解析</p><p>仅使用<code>es6</code>缺点：</p><p><img src="https://fun-typora-pics.oss-cn-beijing.aliyuncs.com/img/20201221135120.png" alt="image-20201221135118358"></p><p>在chrome-dev中可以看到，es6拆分的每个文件都被单独下载，我们知道建立http连接需要时间，尽管http2.0可以多路复用，但是我们没必要拆分这么细的粒度。对此，可以使用<code>webpack</code>对代码进行处理。</p><p>使用webpack处理后：</p><p><img src="https://fun-typora-pics.oss-cn-beijing.aliyuncs.com/img/20201221135235.png" alt="image-20201221135233698"></p>',26),e={render:function(n,s){return p}}}}]);