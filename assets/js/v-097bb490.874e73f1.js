(self.webpackChunkfun_doc=self.webpackChunkfun_doc||[]).push([[6626],{9561:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-097bb490",path:"/typescript/Nodejs%E4%B8%AD%E4%BD%BF%E7%94%A8TS.html",title:"Nodejs中使用TS",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"准备工作",slug:"准备工作",children:[]},{level:2,title:"TODOList demo",slug:"todolist-demo",children:[]},{level:2,title:"Nest.js",slug:"nest-js",children:[]}],filePathRelative:"typescript/Nodejs中使用TS.md",git:{updatedTime:1624500867e3,contributors:[{name:"caifang",email:"cooldish1245@163.com",commits:1}]}}},7360:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>D});var p=a(6252);const t=(0,p.uE)('<h1 id="nodejs中使用ts"><a class="header-anchor" href="#nodejs中使用ts">#</a> Nodejs中使用TS</h1><p>nodejs不能直接运行<code>ts</code>文件，需要把<code>ts</code>文件编译成<code>js</code>文件才能运行。</p><p>如：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>tsc app.ts\nnode app.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',4),e=(0,p.Uk)("使用"),o={href:"https://github.com/TypeStrong/ts-node",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("ts-node"),l=(0,p.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>npm install <span class="token operator">-</span><span class="token constant">D</span> ts<span class="token operator">-</span>node\n\nts<span class="token operator">-</span>node app<span class="token punctuation">.</span>ts\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="准备工作"><a class="header-anchor" href="#准备工作">#</a> 准备工作</h2><p>配置<code>tsconfig.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>\n<span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist&quot;</span><span class="token punctuation">,</span>\n<span class="token property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./src&quot;</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>安装常规插件：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> express body-parser\n<span class="token function">npm</span> <span class="token function">install</span> --save-dev nodemon\n\n<span class="token function">npm</span> <span class="token function">install</span> --save @types/node\n<span class="token function">npm</span> <span class="token function">install</span> --save @types/express\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>其中<code>nodemon</code>用于检测文件变化。<code>@types/node</code>用于使用nodejs定义的类型。<code>@types/express</code>用于express中定义的类型。</p><blockquote><p>安装<code>@types/express</code>后，可以使用<code>es6</code>模块方式进行导包了。如：</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></blockquote><p><code>package.json</code>中定义<code>&quot;start&quot;: &quot;nodemon dist/app.js&quot;</code>指令，<code>package.json</code>完整如下：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ts-demo&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;a node typescript demo&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app.ts&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon dist/app.js&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;typescript&quot;</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;caif&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;@types/node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^14.14.14&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;nodemon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.0.6&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;ts-node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^9.1.1&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;@types/express&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.17.9&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;body-parser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.19.0&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;express&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.17.1&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="todolist-demo"><a class="header-anchor" href="#todolist-demo">#</a> TODOList demo</h2><p>创建一个todoList的demo</p><p><code>src/app.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// const express = require(&#39;express&#39;)</span>\n<span class="token keyword">import</span> express<span class="token punctuation">,</span> <span class="token punctuation">{</span> Request<span class="token punctuation">,</span> Response<span class="token punctuation">,</span> NextFunction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> router <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./routes/todo&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> json <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;body-parser&#39;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">//body-parser中的中间件，用于把请求参数转成json</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/todos&#39;</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span>\n\n<span class="token comment">//中间件捕获全局Error</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token operator">:</span> Error<span class="token punctuation">,</span> req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response<span class="token punctuation">,</span> next<span class="token operator">:</span> NextFunction<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> retCode<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1200</span><span class="token punctuation">,</span> retMsg<span class="token operator">:</span> err<span class="token punctuation">.</span>message <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><code>src/routes/todo.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  createTodo<span class="token punctuation">,</span>\n  getTodoList<span class="token punctuation">,</span>\n  updateTodo<span class="token punctuation">,</span>\n  deleteTodo<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../controller/todo_controller&#39;</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> getTodoList<span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> createTodo<span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">&#39;/:id&#39;</span><span class="token punctuation">,</span> updateTodo<span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">&#39;/:id&#39;</span><span class="token punctuation">,</span> deleteTodo<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> router <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><code>src/model/todo.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">TODO</span></span> <span class="token punctuation">{</span>\n  id<span class="token operator">:</span> <span class="token builtin">string</span>\n  text<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token keyword">constructor</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id\n    <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token constant">TODO</span> <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>src/controller/todo_controller.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">TODO</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../model/todo&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> RequestHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span>\n<span class="token keyword">let</span> todoList<span class="token operator">:</span> <span class="token constant">TODO</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> createTodo<span class="token operator">:</span> <span class="token function-variable function">RequestHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">//显式 说明请求体的类型</span>\n  <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>body <span class="token keyword">as</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text\n  <span class="token keyword">const</span> todo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">TODO</span></span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span>\n  todoList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>todo<span class="token punctuation">)</span>\n  res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> retCode<span class="token operator">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> todo<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> getTodoList<span class="token operator">:</span> <span class="token function-variable function">RequestHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> retCode<span class="token operator">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> todoList <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> updateTodo<span class="token operator">:</span> RequestHandler<span class="token operator">&lt;</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> id <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id\n  <span class="token keyword">const</span> newText <span class="token operator">=</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>body <span class="token keyword">as</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text\n  <span class="token keyword">const</span> index <span class="token operator">=</span> todoList<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>todo<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> todo<span class="token punctuation">.</span>id <span class="token operator">===</span> id<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    todoList<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">TODO</span></span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> newText<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// res.json({ retCode: &#39;-1003&#39;, retMsg: &#39;此id信息不存在&#39; })</span>\n    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;此id信息不存在&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> retCode<span class="token operator">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> deleteTodo<span class="token operator">:</span> RequestHandler<span class="token operator">&lt;</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> id <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id\n  <span class="token keyword">const</span> index <span class="token operator">=</span> todoList<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>todo<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> todo<span class="token punctuation">.</span>id <span class="token operator">===</span> id<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;此id信息不存在&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  todoList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n  res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> retCode<span class="token operator">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> createTodo<span class="token punctuation">,</span> getTodoList<span class="token punctuation">,</span> updateTodo<span class="token punctuation">,</span> deleteTodo <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div>',20),r=(0,p.Uk)("完整项目在: "),u={href:"https://github.com/rockfang/node-ts-demo",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Uk)("node-ts-demo"),k=(0,p.Wm)("h2",{id:"nest-js"},[(0,p.Wm)("a",{class:"header-anchor",href:"#nest-js"},"#"),(0,p.Uk)(" Nest.js")],-1),d=(0,p.Wm)("p",null,[(0,p.Uk)("可以使用"),(0,p.Wm)("code",null,"Nest.js"),(0,p.Uk)("进行服务端开发，很方便使用"),(0,p.Wm)("code",null,"TypeScript"),(0,p.Uk)(".")],-1),b={href:"https://docs.nestjs.com/",target:"_blank",rel:"noopener noreferrer"},m=(0,p.Uk)("nextjs官网"),g=(0,p.Uk)(),q={href:"https://nestjs.bootcss.com/",target:"_blank",rel:"noopener noreferrer"},y=(0,p.Uk)("next中文文档"),f=(0,p.Uk)("Nest (NestJS) 是一个用于构建高效、可扩展的 "),x={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},w=(0,p.Uk)("Node.js"),h=(0,p.Uk)(" 服务器端应用程序的开发框架。它利用 JavaScript 的渐进增强的能力，使用并完全支持 "),v={href:"http://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},j=(0,p.Uk)("TypeScript"),T=(0,p.Uk)(" （仍然允许开发者使用纯 JavaScript 进行开发），并结合了 OOP （面向对象编程）、FP （函数式编程）和 FRP （函数响应式编程）。"),W=(0,p.Wm)("p",null,[(0,p.Wm)("strong",null,"注意Nextjs和Nextjs的区别")],-1),O=(0,p.Uk)("node + ts + react 的开源框架 "),U={href:"https://nextjs.org/",target:"_blank",rel:"noopener noreferrer"},L=(0,p.Uk)("next.js"),N=(0,p.Uk)(" 。"),D={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("p",null,[e,(0,p.Wm)("a",o,[c,(0,p.Wm)(a)])]),l,(0,p.Wm)("p",null,[r,(0,p.Wm)("a",u,[i,(0,p.Wm)(a)])]),k,d,(0,p.Wm)("p",null,[(0,p.Wm)("a",b,[m,(0,p.Wm)(a)]),g,(0,p.Wm)("a",q,[y,(0,p.Wm)(a)])]),(0,p.Wm)("blockquote",null,[(0,p.Wm)("p",null,[f,(0,p.Wm)("a",x,[w,(0,p.Wm)(a)]),h,(0,p.Wm)("a",v,[j,(0,p.Wm)(a)]),T])]),W,(0,p.Wm)("p",null,[O,(0,p.Wm)("a",U,[L,(0,p.Wm)(a)]),N])],64)}}}}]);