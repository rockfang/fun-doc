(self.webpackChunkfun_doc=self.webpackChunkfun_doc||[]).push([[6636],{1801:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-f6284222",path:"/micro_frontend/%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8F%B0Q&A.html",title:"微前端数据中台Q&A",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"如何创建子项目",slug:"如何创建子项目",children:[]},{level:2,title:"如何运行(dev)微前端项目",slug:"如何运行-dev-微前端项目",children:[]},{level:2,title:"如何发布(更新)项目到容器",slug:"如何发布-更新-项目到容器",children:[]},{level:2,title:"如何注册AntDesign Vue组件",slug:"如何注册antdesign-vue组件",children:[]},{level:2,title:"如何正确引入图片资源",slug:"如何正确引入图片资源",children:[]},{level:2,title:"如何使用颜色变量",slug:"如何使用颜色变量",children:[]}],filePathRelative:"micro_frontend/微前端数据中台Q&A.md",git:{updatedTime:1624500867e3,contributors:[{name:"caifang",email:"cooldish1245@163.com",commits:1}]}}},1981:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>Q});var e=a(6252);const l=(0,e.Wm)("h1",{id:"微前端数据中台q-a"},[(0,e.Wm)("a",{class:"header-anchor",href:"#微前端数据中台q-a"},"#"),(0,e.Uk)(" 微前端数据中台Q&A")],-1),c=(0,e.Wm)("h2",{id:"如何创建子项目"},[(0,e.Wm)("a",{class:"header-anchor",href:"#如何创建子项目"},"#"),(0,e.Uk)(" 如何创建子项目")],-1),t=(0,e.Uk)("​ 参照 "),o={href:"http://git.jshcbd.com.cn/microfront-hc-data-platform/main/blob/master/docs/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA(%E8%BF%81%E7%A7%BB)%E5%AD%90%E5%BA%94%E7%94%A8.md",target:"_blank",rel:"noopener noreferrer"},p=(0,e.Uk)("重构菜单项为子项目"),r=(0,e.uE)('<h2 id="如何运行-dev-微前端项目"><a class="header-anchor" href="#如何运行-dev-微前端项目">#</a> 如何运行(dev)微前端项目</h2><p>微前端项目把原来的单页面应用拆分成多个子项目，因此运行微前端项目需要对每个子项目做：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 安装依赖包</span>\n<span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 启动项目</span>\n<span class="token function">npm</span> run serve\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>在<code>main/package.json</code>中写了脚本同时对所有子项目进行依赖安装和启动</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 进入主项目</span>\n<span class="token builtin class-name">cd</span> /main\n<span class="token comment"># 安装所有项目依赖</span>\n<span class="token function">npm</span> install-all \n<span class="token comment"># 启动所有项目,下面两条指令均可</span>\n<span class="token function">npm</span> run serve-all\n<span class="token function">npm</span> run start-all\n<span class="token comment">#打所有项目生产包</span>\n<span class="token function">npm</span> run build-all\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><strong>一下子运行所有项目如果阻塞，可以考虑只运行开发的项目</strong></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 进入主项目</span>\n<span class="token builtin class-name">cd</span> /main\n<span class="token function">npm</span> run serve\n\n<span class="token comment">#启动开发的子项目</span>\n<span class="token builtin class-name">cd</span> /sub-dashboard\n<span class="token function">npm</span> run serve\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这样，就可以仅访问主项目 + 特定子项目</p><h2 id="如何发布-更新-项目到容器"><a class="header-anchor" href="#如何发布-更新-项目到容器">#</a> 如何发布(更新)项目到容器</h2><ul><li><p>生成线上包</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /sub-xxx\n<span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>拷贝<code>dist</code>文件夹到<code>123节点</code> 目前微前端项目的工作目录在：<code>/home/caif/microfront-hc-data-platform/</code>下</p><p>拷贝dist目录到指定微前端项目名下。</p></li><li><p>生成镜像并启动svc</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 172.16.2.120 /home/data/caif/microfront-hc-data-platform</span>\n<span class="token builtin class-name">cd</span> sub-dashboard/\ndocker build -t sub-dashboard:1.0 <span class="token builtin class-name">.</span>\n<span class="token comment"># 拷贝镜像到123,124</span>\n\n<span class="token comment"># docker save -o ../images/sub-dashboard.tar sub-dashboard:1.0 #本地保存镜像</span>\n<span class="token comment"># scp main.tar 2-124:/home/caif/ #拷贝镜像到124主机 uqJ!]31e</span>\n<span class="token comment">#工作节点124 加载镜像</span>\n<span class="token comment">#docker load --input main.tar # 124上加载镜像 </span>\n\n/home/data/caif/docker-image-loader-microfront 下修改脚本处理。完成镜像copy和加载操作\n\n<span class="token comment"># 主节点120 启动服务</span>\n<span class="token builtin class-name">cd</span> /home/data/caif/microfront-hc-data-platform-yaml\n<span class="token comment"># 修改版本</span>\n<span class="token function">vim</span> sub-dashboard.yaml \n<span class="token comment"># 启动svc</span>\n<span class="token comment">#kubectl apply -f sub-dashboard.yaml</span>\n<span class="token comment"># 查看运行信息</span>\n<span class="token comment">#kubectl get svc -n platform-ns</span>\n<span class="token comment"># 删除服务</span>\nkubectl delete -f sub-data-audit.yaml -n hcdsj\n<span class="token comment"># 启动服务</span>\nkubectl create -f sub-data-audit.yaml -n hcdsj\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div></li><li><p>访问主应用<code>http://172.16.2.120:30250/</code>验证</p></li></ul><p>kubectl delete -f main.yaml -n platform-ns</p><p>kubectl create -f main.yaml -n hcdsj</p><h2 id="如何注册antdesign-vue组件"><a class="header-anchor" href="#如何注册antdesign-vue组件">#</a> 如何注册AntDesign Vue组件</h2><p><code>core/lazy_use.js</code>中按需注册使用到的组件。在入口文件<code>main.js</code>中引入该文件即可。</p><h2 id="如何正确引入图片资源"><a class="header-anchor" href="#如何正确引入图片资源">#</a> 如何正确引入图片资源</h2><ul><li><code>main.js</code>中加入：</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>__webpack_public_path__ <span class="token operator">=</span> window<span class="token punctuation">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>目的是动态设置<code>publicPath</code>使得，能正确加载子应用资源。</p><p>还需要注意的是，子应用不能通过<code>import</code>方式引入图片，那样也会去主应用找资源，因此不建议这样使用了：🚫</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> notPassUrl <span class="token keyword">from</span> <span class="token string">&quot;@/assets/dataQuality/notPass.png&quot;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>import语法会导致主应用无法加载到子应用图片，，有一个也不行</p></blockquote>',21),m=(0,e.Uk)("官方说明中指出引入静态资源方式："),u={href:"https://qiankun.umijs.org/zh/faq",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("使用 webpack 静态 publicPath 配置"),d=(0,e.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>publicPath<span class="token operator">:</span> dev <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">//localhost:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>效果：能解决主应用中正确加载子应用资源；副作用：子应用刷新会报favicon无法加载错误导致页面无法加载🚫</p></blockquote><p>结论：</p><ul><li>配置<code>__webpack_public_path__ = window.__INJECTED_PUBLIC_PATH_BY_QIANKUN__;</code></li><li>子应用中不要使用<code>import</code>方式引入图片</li></ul><h2 id="如何使用颜色变量"><a class="header-anchor" href="#如何使用颜色变量">#</a> 如何使用颜色变量</h2>',5),b=(0,e.Uk)("本项目从 "),k={href:"https://github.com/iczer/vue-antd-admin",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("https://github.com/iczer/vue-antd-admin"),g=(0,e.Uk)("开源项目抽取其主题配置方案。"),W=(0,e.Wm)("p",null,"通过它，我们可以 做到：",-1),v=(0,e.Wm)("thead",null,[(0,e.Wm)("tr",null,[(0,e.Wm)("th",null,"颜色指标"),(0,e.Wm)("th",null,"是否可自定义"),(0,e.Wm)("th",null,"less变量"),(0,e.Wm)("th",null,"说明")])],-1),f=(0,e.Wm)("tr",null,[(0,e.Wm)("td",null,[(0,e.Wm)("strong",null,"主题色")]),(0,e.Wm)("td",null,"是"),(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"@theme-color"),(0,e.Uk)("暂时不可用，可用"),(0,e.Wm)("code",null,"@primary-color"),(0,e.Uk)("对应主题色")]),(0,e.Wm)("td",null,"src/config/config.js文件可配置主题色")],-1),U=(0,e.Wm)("tr",null,[(0,e.Wm)("td",null,[(0,e.Wm)("strong",null,"功能色")]),(0,e.Wm)("td",null,"是"),(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"@success-color"),(0,e.Uk)("，"),(0,e.Wm)("code",null,"@warning-color"),(0,e.Uk)("，"),(0,e.Wm)("code",null,"@error-color")]),(0,e.Wm)("td",null,[(0,e.Uk)("src/config/config.js中配置，支持"),(0,e.Wm)("code",null,"hex"),(0,e.Uk)("方式，"),(0,e.Wm)("strong",null,"不支持rgb")])],-1),_=(0,e.Wm)("tr",null,[(0,e.Wm)("td",null,[(0,e.Wm)("strong",null,"文本色")]),(0,e.Wm)("td",null,"否"),(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"@title-color"),(0,e.Uk)("，"),(0,e.Wm)("code",null,"@text-color"),(0,e.Uk)("，"),(0,e.Wm)("code",null,"@text-color-second")]),(0,e.Wm)("td",null,"文本色随主题色变化。")],-1),E=(0,e.Wm)("td",null,[(0,e.Wm)("strong",null,"背景色")],-1),B=(0,e.Wm)("td",null,"否",-1),A=(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"@layout-bg-color"),(0,e.Uk)("，"),(0,e.Wm)("code",null,"@hover-bg-color"),(0,e.Uk)("，"),(0,e.Wm)("code",null,"@base-bg-color"),(0,e.Uk)("，"),(0,e.Wm)("code",null,"@border-color"),(0,e.Uk)(","),(0,e.Wm)("code",null,"@shadow-color")],-1),j={href:"https://iczer.gitee.io/vue-antd-admin-docs/develop/theme.html#%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2",target:"_blank",rel:"noopener noreferrer"},y=(0,e.Uk)("背景色"),x=(0,e.Wm)("td",null,[(0,e.Wm)("strong",null,"antd 的色系")],-1),w=(0,e.Wm)("td",null,"否",-1),q=(0,e.Wm)("td",null,[(0,e.Wm)("code",null,"@blue-1"),(0,e.Uk)("、 "),(0,e.Wm)("code",null,"@blue-2"),(0,e.Uk)(),(0,e.Wm)("code",null,"..."),(0,e.Uk)(),(0,e.Wm)("code",null,"@blue-10 , @green-1"),(0,e.Uk)("、 "),(0,e.Wm)("code",null,"@green-2"),(0,e.Uk)(),(0,e.Wm)("code",null,"..."),(0,e.Uk)(),(0,e.Wm)("code",null,"@green-10...@gold-1"),(0,e.Uk)("、 "),(0,e.Wm)("code",null,"@gold-2"),(0,e.Uk)(),(0,e.Wm)("code",null,"..."),(0,e.Uk)(),(0,e.Wm)("code",null,"@gold-10")],-1),P={href:"https://iczer.gitee.io/vue-antd-admin-docs/develop/theme.html#antd-%E7%9A%84%E8%89%B2%E7%B3%BB",target:"_blank",rel:"noopener noreferrer"},C=(0,e.Uk)("antd-色系"),D=(0,e.Uk)("，此处查看完整的"),z={href:"https://iczer.gitee.io/vue-antd-admin-docs/develop/theme.html#%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2",target:"_blank",rel:"noopener noreferrer"},N=(0,e.Uk)("完整介绍及颜色效果查看"),Q={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,c,(0,e.Wm)("p",null,[t,(0,e.Wm)("a",o,[p,(0,e.Wm)(a)])]),r,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[m,(0,e.Wm)("a",u,[i,(0,e.Wm)(a)])])]),d,(0,e.Wm)("p",null,[b,(0,e.Wm)("a",k,[h,(0,e.Wm)(a)]),g]),W,(0,e.Wm)("table",null,[v,(0,e.Wm)("tbody",null,[f,U,_,(0,e.Wm)("tr",null,[E,B,A,(0,e.Wm)("td",null,[(0,e.Wm)("a",j,[y,(0,e.Wm)(a)])])]),(0,e.Wm)("tr",null,[x,w,q,(0,e.Wm)("td",null,[(0,e.Wm)("a",P,[C,(0,e.Wm)(a)]),D])])])]),(0,e.Wm)("p",null,[(0,e.Wm)("a",z,[N,(0,e.Wm)(a)])])],64)}}}}]);