(self.webpackChunkfun_doc=self.webpackChunkfun_doc||[]).push([[760],{3831:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-7cab56c3",path:"/typescript/TS%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.html",title:"TS中使用第三方库",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"通用库",slug:"通用库",children:[{level:3,title:"lodash使用",slug:"lodash使用",children:[]},{level:3,title:"本地js代码",slug:"本地js代码",children:[]}]},{level:2,title:"ts库",slug:"ts库",children:[{level:3,title:"class-transformer",slug:"class-transformer",children:[]},{level:3,title:"class-validator",slug:"class-validator",children:[]}]}],filePathRelative:"typescript/TS中使用第三方库.md",git:{updatedTime:1624500867e3,contributors:[{name:"caifang",email:"cooldish1245@163.com",commits:1}]}}},462:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>E});var p=a(6252);const t=(0,p.uE)('<h1 id="ts中使用第三方库"><a class="header-anchor" href="#ts中使用第三方库">#</a> TS中使用第三方库</h1><p>ts中可使用通用<code>JavaScript</code>工具库，也可以使用<code>TypeScript</code>编写的工具库</p><h2 id="通用库"><a class="header-anchor" href="#通用库">#</a> 通用库</h2><h3 id="lodash使用"><a class="header-anchor" href="#lodash使用">#</a> lodash使用</h3><p><strong>安装<code>lodash</code></strong></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;lodash&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.17.20&quot;</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>使用报错</strong></p><img src="https://fun-typora-pics.oss-cn-beijing.aliyuncs.com/img/20201221173232.png" alt="image-20201221173025637" style="zoom:80%;"><p>尽管在chrome中我们能看到，生效了，但由于我们使用的lodash是JavaScript版，IDE会提示无法找到模块</p><p><strong>解决方式，找寻&quot;类型翻译包&quot;</strong></p>',10),e={href:"https://www.npmjs.com/package/@types/lodash",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("@types/lodash"),l=(0,p.Uk)(" 就是lodash的一个types包，在"),c={href:"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/lodash",target:"_blank",rel:"noopener noreferrer"},r=(0,p.Uk)("github上查看"),u=(0,p.Uk)("，其实就是提供了申明"),i=(0,p.Wm)("code",null,"lodash",-1),k=(0,p.Uk)("js包中的类型的无数"),m=(0,p.Wm)("code",null,".d.ts",-1),b=(0,p.Uk)("文件；"),d={href:"https://ts.xcatliu.com/basics/declaration-files.html",target:"_blank",rel:"noopener noreferrer"},g=(0,p.Uk)("关于TS中申明文件使用"),h=(0,p.uE)('<blockquote><p><strong>Tips</strong></p><p>使用第三方<code>JavaScript</code>库时，可同时搜索 <strong>Types librayName</strong> 找到它的types库。安装即可正常使用</p></blockquote><h3 id="本地js代码"><a class="header-anchor" href="#本地js代码">#</a> 本地js代码</h3><p>通过内联<code>script</code>标签定义了变量GLOBAL_DATA</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>ts library使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./dist/bundle.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">defer</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">var</span> <span class="token constant">GLOBAL_DATA</span> <span class="token operator">=</span> <span class="token string">&quot;token is xxxx&quot;</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>在<code>ts</code>文件中调用是会报错的</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">GLOBAL_DATA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>需要申明该变量，才能使用：</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">var</span> <span class="token constant">GLOBAL_DATA</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">GLOBAL_DATA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="ts库"><a class="header-anchor" href="#ts库">#</a> ts库</h2><h3 id="class-transformer"><a class="header-anchor" href="#class-transformer">#</a> class-transformer</h3>',10),f=(0,p.Uk)("使用"),y={href:"https://github.com/typestack/class-transformer",target:"_blank",rel:"noopener noreferrer"},v=(0,p.Uk)("class-transformer"),w=(0,p.Uk)("可以把json数据直接转成我们定义的类对象。"),q=(0,p.uE)('<p>安装以来：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> class-transformer --save\n<span class="token function">npm</span> <span class="token function">install</span> reflect-metadata --save\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>全局引入基础以来</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token string">&#39;reflect-metadata&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>使用<code>plainToClass</code>方法进行json数据转换</p><p>定义Model:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//LabelInfo.ts</span>\n<span class="token keyword">class</span> <span class="token class-name">LabelInfo</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token builtin">string</span>\n  sqlStatement<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token keyword">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> sqlStatement<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n    <span class="token keyword">this</span><span class="token punctuation">.</span>sqlStatement <span class="token operator">=</span> sqlStatement\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> LabelInfo <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>json数据解析：</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//app.ts</span>\n<span class="token keyword">import</span> <span class="token string">&#39;reflect-metadata&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> plainToClass <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;class-transformer&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LabelInfo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./models/LabelInfo&#39;</span>\n\n<span class="token keyword">const</span> fetchData <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;日活&#39;</span><span class="token punctuation">,</span>\n    sqlStatement<span class="token operator">:</span> <span class="token string">&#39;select c1 from table1&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;留存&#39;</span><span class="token punctuation">,</span>\n    sqlStatement<span class="token operator">:</span> <span class="token string">&#39;select c2 from table2&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;新增&#39;</span><span class="token punctuation">,</span>\n    sqlStatement<span class="token operator">:</span> <span class="token string">&#39;select c3 from table3&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">plainToClass</span><span class="token punctuation">(</span>LabelInfo<span class="token punctuation">,</span> fetchData<span class="token punctuation">)</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>chrome查看结果</p><p><img src="https://fun-typora-pics.oss-cn-beijing.aliyuncs.com/img/20201222111656.png" alt="image-20201222111648304"></p><p>可以看到：json数据被转成了对象数组了。</p><p>对象参数不匹配时：</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token string">&#39;reflect-metadata&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> plainToClass <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;class-transformer&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LabelInfo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./models/LabelInfo&#39;</span>\n\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span>\n    sqlStatement2<span class="token operator">:</span> <span class="token string">&quot;ssss&quot;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token function">plainToClass</span><span class="token punctuation">(</span>LabelInfo<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="https://fun-typora-pics.oss-cn-beijing.aliyuncs.com/img/20201222111830.png" alt="image-20201222111826548"></p><p>我们到还是做了转换，只是<code>sqlStatement</code>为undefined</p>',16),L={href:"https://github.com/typestack/class-transformer",target:"_blank",rel:"noopener noreferrer"},j=(0,p.Uk)("class-transformer"),x=(0,p.Uk)("拥有很丰富的功能。"),S=(0,p.Wm)("h3",{id:"class-validator"},[(0,p.Wm)("a",{class:"header-anchor",href:"#class-validator"},"#"),(0,p.Uk)(" class-validator")],-1),T={href:"https://github.com/typestack/class-validator",target:"_blank",rel:"noopener noreferrer"},I=(0,p.Uk)("class-validator"),W=(0,p.Uk)("提供装饰器的方式实现数据的校验功能。"),A=(0,p.uE)('<p>tsconfig.json开启<code>experimentalDecorators</code>功能</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;experimentalDecorators&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">/* Enables experimental support for ES7 decorators.*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>安装</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> class-validator --save\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>使用：</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//LabelInfo.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> MaxLength<span class="token punctuation">,</span> IsNotEmpty<span class="token punctuation">,</span> MinLength <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;class-validator&#39;</span>\n<span class="token keyword">class</span> <span class="token class-name">LabelInfo</span> <span class="token punctuation">{</span>\n  @<span class="token function">MinLength</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    message<span class="token operator">:</span> <span class="token string">&#39;标签名长度不能小于2&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  @<span class="token function">MaxLength</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    message<span class="token operator">:</span> <span class="token string">&#39;标签名长度不能大于10&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  name<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  sqlStatement<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token keyword">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> sqlStatement<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n    <span class="token keyword">this</span><span class="token punctuation">.</span>sqlStatement <span class="token operator">=</span> sqlStatement\n  <span class="token punctuation">}</span>\n  <span class="token function">showMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">name: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">  sqlStatement: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>sqlStatement<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> LabelInfo <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//app.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LabelInfo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./models/LabelInfo&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> validate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;class-validator&#39;</span>\n\n<span class="token keyword">const</span> labelInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LabelInfo</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n<span class="token function">validate</span><span class="token punctuation">(</span>labelInfo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n    <span class="token keyword">return</span>\n  <span class="token punctuation">}</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>labelInfo<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',7),E={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("p",null,[(0,p.Wm)("a",e,[o,(0,p.Wm)(a)]),l,(0,p.Wm)("a",c,[r,(0,p.Wm)(a)]),u,i,k,m,b]),(0,p.Wm)("p",null,[(0,p.Wm)("a",d,[g,(0,p.Wm)(a)])]),h,(0,p.Wm)("p",null,[f,(0,p.Wm)("a",y,[v,(0,p.Wm)(a)]),w]),q,(0,p.Wm)("p",null,[(0,p.Wm)("a",L,[j,(0,p.Wm)(a)]),x]),S,(0,p.Wm)("p",null,[(0,p.Wm)("a",T,[I,(0,p.Wm)(a)]),W]),A],64)}}}}]);