(self.webpackChunkfun_doc=self.webpackChunkfun_doc||[]).push([[195],{6815:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-24b6633c",path:"/android/SDK%E6%8F%92%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91(%E4%B8%8B).html",title:"SDK插件化开发（下）",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"构建sdk",slug:"构建sdk",children:[]},{level:2,title:"构建壳代码",slug:"构建壳代码",children:[]},{level:2,title:"加密核心代码",slug:"加密核心代码",children:[]},{level:2,title:"整合代码，生成SDK",slug:"整合代码-生成sdk",children:[]}],filePathRelative:"android/SDK插件化开发(下).md",git:{updatedTime:162452411e4,contributors:[{name:"caifang",email:"cooldish1245@163.com",commits:1}]}}},9197:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="sdk插件化开发-下"><a class="header-anchor" href="#sdk插件化开发-下">#</a> SDK插件化开发（下）</h1><h2 id="构建sdk"><a class="header-anchor" href="#构建sdk">#</a> 构建sdk</h2><ol><li><p>构建核心代码</p></li><li><p>构建壳代码</p></li><li><p>加密核心代码</p></li><li><p>整合壳代码及资源，进行打包发布。</p></li><li><p>构建核心代码 通过脚本把核心代码打成jar包</p></li></ol><div class="language-gradle ext-gradle line-numbers-mode"><pre class="language-gradle"><code>task makeJar(type: Copy) {\n    //删除存在的\n    delete’build/libs/uniaccount.jar’\n    //设置拷贝的文件\n    from(’build/intermediates/packaged-classes/release/’)\n    //打进jar包后的文件目录\n    into(’build/libs/’)\n    //将classes.jar放入build/libs/目录下\n    include(’classes.jar’)\n    //重命名\n    rename (’classes.jar’,’myxxx.jar’)\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="构建壳代码"><a class="header-anchor" href="#构建壳代码">#</a> 构建壳代码</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> appId<span class="token punctuation">,</span> <span class="token class-name">String</span> appSecret<span class="token punctuation">)</span><span class="token punctuation">{</span>\n<span class="token function">loadCoreSdk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">return</span> <span class="token class-name">XxxSdk</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSdkVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token keyword">return</span> <span class="token class-name">XxxSdk</span><span class="token punctuation">.</span><span class="token function">getSdkVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">requestToken</span><span class="token punctuation">(</span><span class="token class-name">LoginPageConfig</span> loginPageConfig<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ResultListener</span> listener<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mobileAuth</span><span class="token punctuation">(</span><span class="token keyword">int</span> timeout<span class="token punctuation">,</span> <span class="token class-name">ResultListener</span> listener<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>壳代码还包含解密核心代码，dexLoader加载核心代码的功能。</p><h2 id="加密核心代码"><a class="header-anchor" href="#加密核心代码">#</a> 加密核心代码</h2><p>编写工具类，把核心jar转成dex文件，并加密处理。 为了使得核心代码和壳代码一起打成一个包，我们把加密后的核心代码转成Java类，并和壳代码合并。 为了避嫌，此处加密代码和转java类代码就不贴了…</p><p>jar转dex:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">jarTodex</span><span class="token punctuation">(</span><span class="token class-name">String</span> jarName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">try</span> <span class="token punctuation">{</span>\n\t\t<span class="token class-name">String</span> command <span class="token operator">=</span> ”dx <span class="token operator">--</span>dex <span class="token operator">--</span>output<span class="token operator">=</span>” <span class="token operator">+</span> cleardexpath <span class="token operator">+</span> ” ” <span class="token operator">+</span> jarName<span class="token punctuation">;</span>\n\t\t<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">SystemCommand</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\te<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\te2<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="整合代码-生成sdk"><a class="header-anchor" href="#整合代码-生成sdk">#</a> 整合代码，生成SDK</h2><p>加密核心代码 + 壳代码 + 资源文件 构成了我们的sdk.编写gradle脚本完成。</p>',13),e={render:function(n,s){return p}}}}]);