(self.webpackChunkfun_doc=self.webpackChunkfun_doc||[]).push([[7645],{9972:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-54056247",path:"/android/SDK%E6%8F%92%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91.html",title:"ANDROID SDK插件化开发",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"代码组成",slug:"代码组成",children:[]},{level:2,title:"代码功能",slug:"代码功能",children:[]},{level:2,title:"加载流程",slug:"加载流程",children:[]}],filePathRelative:"android/SDK插件化开发.md",git:{updatedTime:162452411e4,contributors:[{name:"caifang",email:"cooldish1245@163.com",commits:1}]}}},6449:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="android-sdk插件化开发"><a class="header-anchor" href="#android-sdk插件化开发">#</a> ANDROID SDK插件化开发</h1><h2 id="代码组成"><a class="header-anchor" href="#代码组成">#</a> 代码组成</h2><ul><li>壳代码</li><li>核心代码</li><li>资源文件</li></ul><h2 id="代码功能"><a class="header-anchor" href="#代码功能">#</a> 代码功能</h2><ul><li>壳代码提供api露出调用，内部通过反射方式调用核心代码 代码露出：</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> appId<span class="token punctuation">,</span> <span class="token class-name">String</span> appSecret<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token function">loadCoreSdk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> <span class="token class-name">XxxSdk</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSdkVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token keyword">return</span> <span class="token class-name">XxxSdk</span><span class="token punctuation">.</span><span class="token function">getSdkVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">requestToken</span><span class="token punctuation">(</span><span class="token class-name">LoginPageConfig</span> loginPageConfig<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ResultListener</span> listener<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mobileAuth</span><span class="token punctuation">(</span><span class="token keyword">int</span> timeout<span class="token punctuation">,</span> <span class="token class-name">ResultListener</span> listener<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>反射调用核心代码：</p><ul><li>核心代码进行核心的代码逻辑</li><li>资源文件是使用到的布局图片等资源</li></ul><h2 id="加载流程"><a class="header-anchor" href="#加载流程">#</a> 加载流程</h2><p>壳代码提供sdk初始化方法，初始化功能:</p><blockquote><p>加载sdk核心代码 执行sdk的初始化方法</p></blockquote><p>核心代码加载流程:</p><blockquote><p>解密核心代码 解密update下的核心代码 比对版本选择要加载的路径 dexclassloader加载核心代码</p></blockquote><p>以上描述也说明了，如何构建插件化的sdk</p><ol><li>构建核心代码</li><li>构建壳代码</li><li>构建资源目录</li><li>加密核心代码，整合壳代码及资源，进行打包发布。</li></ol>',15),e={render:function(n,s){return p}}}}]);